name: CI

permissions:
  contents: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential liburing-dev libssl-dev libyaml-dev libnghttp2-dev libcriterion-dev gcovr

      - name: Build with coverage
        run: make clean && make COVERAGE=1

      - name: Run tests
        run: make test
      
      - name: Generate coverage report (gcovr)
        run: make coverage

      - name: Deploy coverage report to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage

      #- name: Enforce minimum thresholds
      #  run: |
      #    gcovr -r . --exclude 'tests' --branches \
      #      --fail-under-line 70 --fail-under-branch 60

  fedora-build:
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install compilers & build tools (Fedora)
        run: |
          sudo dnf install -y \
            gcc gcc-c++ make automake autoconf libtool pkgconfig \
            git meson ninja-build dnf-plugins-core libffi-devel cmake openssl

      - name: Build and install Criterion from source
        run: |
          git clone --recursive https://github.com/Snaipe/Criterion.git /tmp/criterion
          cd /tmp/criterion
          meson setup build
          ninja -C build
          sudo ninja -C build install
          # Update linker cache so libcriterion is found
          echo '/usr/local/lib64' | sudo tee /etc/ld.so.conf.d/criterion.conf
          sudo ldconfig

      - name: Install other dependencies (Fedora)
        run: |
          sudo dnf install -y liburing-devel openssl-devel libyaml-devel libnghttp2-devel

      - name: Compile project
        run: make clean && make

      - name: Run tests
        run: make test
